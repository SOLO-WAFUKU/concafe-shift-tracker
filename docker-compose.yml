version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: concafe_tracker
      POSTGRES_USER: concafe_user
      POSTGRES_PASSWORD: concafe_password_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - concafe_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U concafe_user -d concafe_tracker"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis キャッシュ
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - concafe_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI バックエンド
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://concafe_user:concafe_password_dev@postgres:5432/concafe_tracker
      - REDIS_URL=redis://redis:6379
      - PLAYWRIGHT_HEADLESS=true
      - LOG_LEVEL=INFO
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=concafe-admin-2024
      - SECRET_KEY=development-secret-key-change-in-production
    volumes:
      - ./stores.yaml:/app/stores.yaml:ro
      - ./backend/app:/app/app:ro
      - shared_images:/app/frontend/public/images
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - concafe_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public
      - shared_images:/app/public/images
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - concafe_network
    restart: unless-stopped

  # Nginx リバースプロキシ（プロダクション用）
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - shared_images:/usr/share/nginx/html/images:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - concafe_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  shared_images:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  concafe_network:
    driver: bridge